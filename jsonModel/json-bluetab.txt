Primera peticion -> getSelectors() -> Recibir todos los selectores disponibles
JSON envio: null
JSON recibido:
{
  selectors: [ //Array de selectores (Array por que es necesario que esten ordenados)
    {
      id: key //Key interna para posteriores peticiones
      name: string //Copy del selector
      values: [
        {
          value: key //Key interna o valor de este selector
          name: string //Copy de este valor
        }
        ...
      ]
    },
    ...
  ]
}

Segunda peticion -> getIndex() -> Recibir los indices para unos selectores
JSON envio: 
{ //Par de valores, id del selector y value asociado
  id: value,
  id: value,
  ...
}
JSON recibido:
{
  index: [ //Array de indices (Array por que es necesario que esten ordenados)
    {
      id: key //Key interna para posteriores peticiones
      name: string //Copy del indices
      value: number //Valor de este indice (del tipo que sea, con tal de que sea numero)
    },
    ...
  ]
}

Tercera peticion -> getSubindex() -> Recibir los subindices para un indice y sus selectores
JSON envio:
{
  selectors: { //Entiendo que es necesario que os envie siempre los selectores
    //Par de valores, id del selector y value asociado
    id: value,
    id: value,
    ...
  },
  index: key //Key del indice,
}
JSON recibido:
{
  subindexes: [
    {
      id: key //Key interna para posteriores peticiones,
      name: string //Copy del subindice
      type: integer //Tipo de grafica (Por ahora dejemos que 1 es la grafica de barra con secciones y 2 la de calor)
      data: { //Asumo que las graficas son lineales
        value: number //Valor
        variation: number //Variación
        sections: { //Asumo que la cota inferior es 0, por lo tanto estos valores definen el limite de la seccion, siendo 'high' el valor mas elevado de la grafica
          low: number,
          mid: number,
          high: number
        }
      }
    },
    ...
  ]
}

Cuarta peticion -> getIndexEvolution() -> Recibir la evolucion de un indice
JSON envio:
{
  selectors: { //Entiendo que es necesario que os envie siempre los selectores
    //Par de valores, id del selector y value asociado
    id: value,
    id: value,
    ...
  },
  index: key //Key del indice,
}
JSON recibido:
{
  name: string //Nombre del indice
  variation: number //Variacion
  points: [ //Puntos para la grafica
    {
      value: number
      date: date 
    }
  ]
}

Quinta peticion -> getBusinessElements() -> Recibir los business elements de un subindice (Aqui entiendo que puede haber varias secciones en funcion)
JSON envio: {
  selectors: { //Entiendo que es necesario que os envie siempre los selectores
    //Par de valores, id del selector y value asociado
    id: value,
    id: value,
    ...
  },
  index: key //Entiendo que es necesario que se envie tambien la key del indice,
  subindex: key //Key del subindice seleccionado
}
JSON recibido: {
  businessElements: [
    {
      selector: {
        id: key //Key interna para posteriores peticiones
        name: string //Copy del selector
        values: [
          {
            value: key //Key interna o valor de este selector
            name: string //Copy de este valor
          }
          ...
        ]
      },
      metrics: [ //Array de metricas (Array por que tiene que estar ordenado)
        {
          id: key //Key de esta metrica,
          name: string //Copy de esta metrica,
          state: number //Estado del semaforo (0 -> rojo, 1 -> amarillo, 2 -> rojo),
        }
      ]
    }
  ]
}

Sexta peticion -> getBusinessElementEvolution() -> Recibir la evolucion de un business element
JSON envio: {
  selectors: { //Entiendo que es necesario que os envie siempre los selectores
    //Par de valores, id del selector y value asociado
    id: value,
    id: value,
    ...
  },
  index: key //Entiendo que es necesario que se envie tambien la key del indice,
  subindex: key //Entiendo que es necesario que se envie tambien la key del subindice,
  metric: key //Key de la metrica 
}
JSON recibido: { //Por ahora no incluyo la grafica extra que salia en el diseño inicial por que aun no esta definida.
  name: string //Nombre del indice
  variation: number //Variacion
  points: [ //Puntos para la grafica
    {
      value: number
      date: date 
    }
  ]
}